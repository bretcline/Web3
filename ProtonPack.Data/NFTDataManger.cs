// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591

using ProtonPack.Data;
using System.Configuration;
using WebThree.Shared.Data;
using static WebThree.Shared.Utilities;

namespace ProtonPack.Data
{
    public class NFTDataManager : BaseDataManager<NFT>
    {

        internal NFTDataManager(CompanyUser cu) : base(cu)
        {
        }

        public override List<NFT> GetAll()
        {
            var rc = base.GetAll();
            foreach( var item in rc )
            {
                if (!string.IsNullOrWhiteSpace(item.NftHash))
                {
                    var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(item.NftHash);
                    item.NftHash = System.Convert.ToBase64String(plainTextBytes);
                }
                //var base64EncodedBytes = System.Convert.FromBase64String(item.NftHash);
                //item.NftHash = System.Text.Encoding.UTF8.GetString(base64EncodedBytes);
            }
            return rc;
        }

        public override NFT Get(Guid id)
        {
            var rc = base.Get(id);
            if (!string.IsNullOrWhiteSpace(rc.NftHash))
            {
                var plainTextBytes = System.Text.Encoding.UTF8.GetBytes(rc.NftHash);
                rc.NftHash = System.Convert.ToBase64String(plainTextBytes);
            }
            return rc;
        }

        public override NFT Add(NFT entity)
        {
            if (!string.IsNullOrWhiteSpace(entity.NftHash))
            {
                var base64EncodedBytes = System.Convert.FromBase64String(entity.NftHash);
                entity.NftHash = System.Text.Encoding.UTF8.GetString(base64EncodedBytes);
            }
            return base.Add(entity);
        }


        public override NFT Update(NFT entity, NFT? item = null)
        {
            if (!string.IsNullOrWhiteSpace(entity.NftHash))
            {
                var base64EncodedBytes = System.Convert.FromBase64String(entity.NftHash);
                entity.NftHash = System.Text.Encoding.UTF8.GetString(base64EncodedBytes);
            }
            return base.Update(entity);
        }
    }
}
#pragma warning restore 1591
